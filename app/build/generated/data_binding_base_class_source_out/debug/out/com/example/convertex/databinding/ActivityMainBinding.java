// Generated by view binder compiler. Do not edit!
package com.example.convertex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.convertex.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnConvert;

  @NonNull
  public final TextView btnDestination;

  @NonNull
  public final Button btnInputCopy;

  @NonNull
  public final Button btnInputPaste;

  @NonNull
  public final Button btnResultCopy;

  @NonNull
  public final Button btnResultPaste;

  @NonNull
  public final TextView btnSource;

  @NonNull
  public final Button btnSwap;

  @NonNull
  public final EditText txtInput;

  @NonNull
  public final TextView txtResult;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnConvert,
      @NonNull TextView btnDestination, @NonNull Button btnInputCopy, @NonNull Button btnInputPaste,
      @NonNull Button btnResultCopy, @NonNull Button btnResultPaste, @NonNull TextView btnSource,
      @NonNull Button btnSwap, @NonNull EditText txtInput, @NonNull TextView txtResult) {
    this.rootView = rootView;
    this.btnConvert = btnConvert;
    this.btnDestination = btnDestination;
    this.btnInputCopy = btnInputCopy;
    this.btnInputPaste = btnInputPaste;
    this.btnResultCopy = btnResultCopy;
    this.btnResultPaste = btnResultPaste;
    this.btnSource = btnSource;
    this.btnSwap = btnSwap;
    this.txtInput = txtInput;
    this.txtResult = txtResult;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_convert;
      Button btnConvert = ViewBindings.findChildViewById(rootView, id);
      if (btnConvert == null) {
        break missingId;
      }

      id = R.id.btnDestination;
      TextView btnDestination = ViewBindings.findChildViewById(rootView, id);
      if (btnDestination == null) {
        break missingId;
      }

      id = R.id.btnInputCopy;
      Button btnInputCopy = ViewBindings.findChildViewById(rootView, id);
      if (btnInputCopy == null) {
        break missingId;
      }

      id = R.id.btnInputPaste;
      Button btnInputPaste = ViewBindings.findChildViewById(rootView, id);
      if (btnInputPaste == null) {
        break missingId;
      }

      id = R.id.btnResultCopy;
      Button btnResultCopy = ViewBindings.findChildViewById(rootView, id);
      if (btnResultCopy == null) {
        break missingId;
      }

      id = R.id.btnResultPaste;
      Button btnResultPaste = ViewBindings.findChildViewById(rootView, id);
      if (btnResultPaste == null) {
        break missingId;
      }

      id = R.id.btnSource;
      TextView btnSource = ViewBindings.findChildViewById(rootView, id);
      if (btnSource == null) {
        break missingId;
      }

      id = R.id.btnSwap;
      Button btnSwap = ViewBindings.findChildViewById(rootView, id);
      if (btnSwap == null) {
        break missingId;
      }

      id = R.id.txtInput;
      EditText txtInput = ViewBindings.findChildViewById(rootView, id);
      if (txtInput == null) {
        break missingId;
      }

      id = R.id.txtResult;
      TextView txtResult = ViewBindings.findChildViewById(rootView, id);
      if (txtResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnConvert, btnDestination,
          btnInputCopy, btnInputPaste, btnResultCopy, btnResultPaste, btnSource, btnSwap, txtInput,
          txtResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
